//- #loading-box
//-   .loading-left-bg
//-   .loading-right-bg
//-   .spinner-box
//-     .configure-border-1
//-       .configure-core
//-     .configure-border-2
//-       .configure-core
//-     .loading-word= _p('loading')

//- script.
//-   (()=>{
//-     const $loadingBox = document.getElementById('loading-box')
//-     const $body = document.body
//-     const preloader = {
//-       endLoading: () => {
//-         if ($loadingBox.classList.contains('loaded')) return
//-         $body.style.overflow = ''
//-         $loadingBox.classList.add('loaded')
//-       },
//-       initLoading: () => {
//-         $body.style.overflow = 'hidden'
//-         $loadingBox.classList.remove('loaded')
//-       }
//-     }

//-     preloader.initLoading()

//-     if (document.readyState === 'complete') {
//-       preloader.endLoading()
//-     } else {
//-       window.addEventListener('load', preloader.endLoading)
//-       document.addEventListener('DOMContentLoaded', preloader.endLoading)
//-       // Add timeout protection: force end after 7 seconds
//-       setTimeout(preloader.endLoading, 7000)
//-     }

//-     if (!{theme.pjax && theme.pjax.enable}) {
//-       btf.addGlobalFn('pjaxSend', preloader.initLoading, 'preloader_init')
//-       btf.addGlobalFn('pjaxComplete', preloader.endLoading, 'preloader_end')
//-     }
//-   })()

#loading-box(onclick='document.getElementById("loading-box").classList.add("loaded")')
  .loading-bg
    div.loading-img
    .loading-image-dot

script.
  const preloader = {
    endLoading: () => {
      document.body.style.overflow = 'auto';
      document.getElementById('loading-box').classList.add("loaded")
    },
    initLoading: () => {
      document.body.style.overflow = 'hidden';
      document.getElementById('loading-box').classList.remove("loaded")
    }
  }
  
  // Initialize loading
  preloader.initLoading()
  
  // Optimized loading logic - end loading at 60% progress
  let loadingEnded = false
  const endLoadingSafely = () => {
    if (!loadingEnded) {
      loadingEnded = true
      preloader.endLoading()
    }
  }
  
  // Check if page is already loaded
  if (document.readyState === 'complete') {
    endLoadingSafely()
  } else {
    // Wait for more resources to load before ending (closer to 60% progress)
    let domReady = false
    let resourcesLoaded = false
    
    // Mark DOM as ready but don't end loading yet
    document.addEventListener('DOMContentLoaded', () => {
      domReady = true
    })
    
    // End loading when window load event fires (about 60% progress)
    window.addEventListener('load', () => {
      resourcesLoaded = true
      endLoadingSafely()
    })
    
    // Progressive loading: end when both DOM and some resources are ready
    const checkProgressiveLoading = () => {
      if (domReady && !resourcesLoaded) {
        // Wait a bit more for resources to load (simulating 60% progress)
        setTimeout(() => {
          if (!resourcesLoaded) {
            endLoadingSafely()
          }
        }, 800) // Wait 800ms after DOM ready
      }
    }
    
    // Check progressive loading
    document.addEventListener('DOMContentLoaded', checkProgressiveLoading)
    
    // Safety timeout: force end after 3 seconds
    setTimeout(endLoadingSafely, 3000)
    
    // Additional check: end loading when page becomes interactive
    if (document.readyState === 'interactive') {
      setTimeout(() => {
        if (!loadingEnded) {
          endLoadingSafely()
        }
      }, 1000) // Wait 1 second after interactive state
    }
  }

  if (!{theme.pjax && theme.pjax.enable}) {
    document.addEventListener('pjax:send', () => { 
      loadingEnded = false
      preloader.initLoading() 
    })
    document.addEventListener('pjax:complete', endLoadingSafely)
  }